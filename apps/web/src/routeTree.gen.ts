/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as LandingRouteRouteImport } from './routes/_landing/route'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as LandingIndexRouteImport } from './routes/_landing/index'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignOutRouteImport } from './routes/auth/sign-out'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as DashboardUsersRouteRouteImport } from './routes/dashboard/users/route'
import { Route as OrganizationsCreateIndexRouteImport } from './routes/organizations/create/index'
import { Route as DashboardUsersIndexRouteImport } from './routes/dashboard/users/index'
import { Route as DashboardOrganizationsOrganizationIdRouteRouteImport } from './routes/dashboard/organizations/$organizationId/route'
import { Route as DashboardAdminVacanciesRouteRouteImport } from './routes/dashboard/admin/vacancies/route'
import { Route as DashboardAdminUsersRouteRouteImport } from './routes/dashboard/admin/users/route'
import { Route as DashboardAdminSkillsRouteRouteImport } from './routes/dashboard/admin/skills/route'
import { Route as DashboardAdminOrganizationsRouteRouteImport } from './routes/dashboard/admin/organizations/route'
import { Route as DashboardUsersVacanciesIndexRouteImport } from './routes/dashboard/users/vacancies/index'
import { Route as DashboardUsersRequestsIndexRouteImport } from './routes/dashboard/users/requests/index'
import { Route as DashboardOrganizationsOrganizationIdIndexRouteImport } from './routes/dashboard/organizations/$organizationId/index'
import { Route as DashboardAdminVacanciesIndexRouteImport } from './routes/dashboard/admin/vacancies/index'
import { Route as DashboardAdminUsersIndexRouteImport } from './routes/dashboard/admin/users/index'
import { Route as DashboardAdminSpecialtiesIndexRouteImport } from './routes/dashboard/admin/specialties/index'
import { Route as DashboardAdminSkillsIndexRouteImport } from './routes/dashboard/admin/skills/index'
import { Route as DashboardAdminOrganizationsIndexRouteImport } from './routes/dashboard/admin/organizations/index'
import { Route as DashboardUsersUserIdResumeRouteRouteImport } from './routes/dashboard/users/$userId/resume/route'
import { Route as DashboardOrganizationsOrganizationIdVacanciesRouteRouteImport } from './routes/dashboard/organizations/$organizationId/vacancies/route'
import { Route as DashboardOrganizationsOrganizationIdEmployeesRouteRouteImport } from './routes/dashboard/organizations/$organizationId/employees/route'
import { Route as DashboardUsersVacanciesVacancyIdIndexRouteImport } from './routes/dashboard/users/vacancies/$vacancyId/index'
import { Route as DashboardUsersUserIdResumeIndexRouteImport } from './routes/dashboard/users/$userId/resume/index'
import { Route as DashboardOrganizationsOrganizationIdVacanciesIndexRouteImport } from './routes/dashboard/organizations/$organizationId/vacancies/index'
import { Route as DashboardOrganizationsOrganizationIdEmployeesIndexRouteImport } from './routes/dashboard/organizations/$organizationId/employees/index'
import { Route as DashboardOrganizationsOrganizationIdVacanciesVacancyIdIndexRouteImport } from './routes/dashboard/organizations/$organizationId/vacancies/$vacancyId/index'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const LandingRouteRoute = LandingRouteRouteImport.update({
  id: '/_landing',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const LandingIndexRoute = LandingIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LandingRouteRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignOutRoute = AuthSignOutRouteImport.update({
  id: '/auth/sign-out',
  path: '/auth/sign-out',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardUsersRouteRoute = DashboardUsersRouteRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const OrganizationsCreateIndexRoute =
  OrganizationsCreateIndexRouteImport.update({
    id: '/organizations/create/',
    path: '/organizations/create/',
    getParentRoute: () => rootRouteImport,
  } as any)
const DashboardUsersIndexRoute = DashboardUsersIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardUsersRouteRoute,
} as any)
const DashboardOrganizationsOrganizationIdRouteRoute =
  DashboardOrganizationsOrganizationIdRouteRouteImport.update({
    id: '/organizations/$organizationId',
    path: '/organizations/$organizationId',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardAdminVacanciesRouteRoute =
  DashboardAdminVacanciesRouteRouteImport.update({
    id: '/admin/vacancies',
    path: '/admin/vacancies',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardAdminUsersRouteRoute =
  DashboardAdminUsersRouteRouteImport.update({
    id: '/admin/users',
    path: '/admin/users',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardAdminSkillsRouteRoute =
  DashboardAdminSkillsRouteRouteImport.update({
    id: '/admin/skills',
    path: '/admin/skills',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardAdminOrganizationsRouteRoute =
  DashboardAdminOrganizationsRouteRouteImport.update({
    id: '/admin/organizations',
    path: '/admin/organizations',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardUsersVacanciesIndexRoute =
  DashboardUsersVacanciesIndexRouteImport.update({
    id: '/vacancies/',
    path: '/vacancies/',
    getParentRoute: () => DashboardUsersRouteRoute,
  } as any)
const DashboardUsersRequestsIndexRoute =
  DashboardUsersRequestsIndexRouteImport.update({
    id: '/requests/',
    path: '/requests/',
    getParentRoute: () => DashboardUsersRouteRoute,
  } as any)
const DashboardOrganizationsOrganizationIdIndexRoute =
  DashboardOrganizationsOrganizationIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardOrganizationsOrganizationIdRouteRoute,
  } as any)
const DashboardAdminVacanciesIndexRoute =
  DashboardAdminVacanciesIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardAdminVacanciesRouteRoute,
  } as any)
const DashboardAdminUsersIndexRoute =
  DashboardAdminUsersIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardAdminUsersRouteRoute,
  } as any)
const DashboardAdminSpecialtiesIndexRoute =
  DashboardAdminSpecialtiesIndexRouteImport.update({
    id: '/admin/specialties/',
    path: '/admin/specialties/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardAdminSkillsIndexRoute =
  DashboardAdminSkillsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardAdminSkillsRouteRoute,
  } as any)
const DashboardAdminOrganizationsIndexRoute =
  DashboardAdminOrganizationsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardAdminOrganizationsRouteRoute,
  } as any)
const DashboardUsersUserIdResumeRouteRoute =
  DashboardUsersUserIdResumeRouteRouteImport.update({
    id: '/$userId/resume',
    path: '/$userId/resume',
    getParentRoute: () => DashboardUsersRouteRoute,
  } as any)
const DashboardOrganizationsOrganizationIdVacanciesRouteRoute =
  DashboardOrganizationsOrganizationIdVacanciesRouteRouteImport.update({
    id: '/vacancies',
    path: '/vacancies',
    getParentRoute: () => DashboardOrganizationsOrganizationIdRouteRoute,
  } as any)
const DashboardOrganizationsOrganizationIdEmployeesRouteRoute =
  DashboardOrganizationsOrganizationIdEmployeesRouteRouteImport.update({
    id: '/employees',
    path: '/employees',
    getParentRoute: () => DashboardOrganizationsOrganizationIdRouteRoute,
  } as any)
const DashboardUsersVacanciesVacancyIdIndexRoute =
  DashboardUsersVacanciesVacancyIdIndexRouteImport.update({
    id: '/vacancies/$vacancyId/',
    path: '/vacancies/$vacancyId/',
    getParentRoute: () => DashboardUsersRouteRoute,
  } as any)
const DashboardUsersUserIdResumeIndexRoute =
  DashboardUsersUserIdResumeIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => DashboardUsersUserIdResumeRouteRoute,
  } as any)
const DashboardOrganizationsOrganizationIdVacanciesIndexRoute =
  DashboardOrganizationsOrganizationIdVacanciesIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      DashboardOrganizationsOrganizationIdVacanciesRouteRoute,
  } as any)
const DashboardOrganizationsOrganizationIdEmployeesIndexRoute =
  DashboardOrganizationsOrganizationIdEmployeesIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () =>
      DashboardOrganizationsOrganizationIdEmployeesRouteRoute,
  } as any)
const DashboardOrganizationsOrganizationIdVacanciesVacancyIdIndexRoute =
  DashboardOrganizationsOrganizationIdVacanciesVacancyIdIndexRouteImport.update(
    {
      id: '/$vacancyId/',
      path: '/$vacancyId/',
      getParentRoute: () =>
        DashboardOrganizationsOrganizationIdVacanciesRouteRoute,
    } as any,
  )

export interface FileRoutesByFullPath {
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/users': typeof DashboardUsersRouteRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-out': typeof AuthSignOutRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/': typeof LandingIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/admin/organizations': typeof DashboardAdminOrganizationsRouteRouteWithChildren
  '/dashboard/admin/skills': typeof DashboardAdminSkillsRouteRouteWithChildren
  '/dashboard/admin/users': typeof DashboardAdminUsersRouteRouteWithChildren
  '/dashboard/admin/vacancies': typeof DashboardAdminVacanciesRouteRouteWithChildren
  '/dashboard/organizations/$organizationId': typeof DashboardOrganizationsOrganizationIdRouteRouteWithChildren
  '/dashboard/users/': typeof DashboardUsersIndexRoute
  '/organizations/create': typeof OrganizationsCreateIndexRoute
  '/dashboard/organizations/$organizationId/employees': typeof DashboardOrganizationsOrganizationIdEmployeesRouteRouteWithChildren
  '/dashboard/organizations/$organizationId/vacancies': typeof DashboardOrganizationsOrganizationIdVacanciesRouteRouteWithChildren
  '/dashboard/users/$userId/resume': typeof DashboardUsersUserIdResumeRouteRouteWithChildren
  '/dashboard/admin/organizations/': typeof DashboardAdminOrganizationsIndexRoute
  '/dashboard/admin/skills/': typeof DashboardAdminSkillsIndexRoute
  '/dashboard/admin/specialties': typeof DashboardAdminSpecialtiesIndexRoute
  '/dashboard/admin/users/': typeof DashboardAdminUsersIndexRoute
  '/dashboard/admin/vacancies/': typeof DashboardAdminVacanciesIndexRoute
  '/dashboard/organizations/$organizationId/': typeof DashboardOrganizationsOrganizationIdIndexRoute
  '/dashboard/users/requests': typeof DashboardUsersRequestsIndexRoute
  '/dashboard/users/vacancies': typeof DashboardUsersVacanciesIndexRoute
  '/dashboard/organizations/$organizationId/employees/': typeof DashboardOrganizationsOrganizationIdEmployeesIndexRoute
  '/dashboard/organizations/$organizationId/vacancies/': typeof DashboardOrganizationsOrganizationIdVacanciesIndexRoute
  '/dashboard/users/$userId/resume/': typeof DashboardUsersUserIdResumeIndexRoute
  '/dashboard/users/vacancies/$vacancyId': typeof DashboardUsersVacanciesVacancyIdIndexRoute
  '/dashboard/organizations/$organizationId/vacancies/$vacancyId': typeof DashboardOrganizationsOrganizationIdVacanciesVacancyIdIndexRoute
}
export interface FileRoutesByTo {
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-out': typeof AuthSignOutRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/': typeof LandingIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/users': typeof DashboardUsersIndexRoute
  '/organizations/create': typeof OrganizationsCreateIndexRoute
  '/dashboard/admin/organizations': typeof DashboardAdminOrganizationsIndexRoute
  '/dashboard/admin/skills': typeof DashboardAdminSkillsIndexRoute
  '/dashboard/admin/specialties': typeof DashboardAdminSpecialtiesIndexRoute
  '/dashboard/admin/users': typeof DashboardAdminUsersIndexRoute
  '/dashboard/admin/vacancies': typeof DashboardAdminVacanciesIndexRoute
  '/dashboard/organizations/$organizationId': typeof DashboardOrganizationsOrganizationIdIndexRoute
  '/dashboard/users/requests': typeof DashboardUsersRequestsIndexRoute
  '/dashboard/users/vacancies': typeof DashboardUsersVacanciesIndexRoute
  '/dashboard/organizations/$organizationId/employees': typeof DashboardOrganizationsOrganizationIdEmployeesIndexRoute
  '/dashboard/organizations/$organizationId/vacancies': typeof DashboardOrganizationsOrganizationIdVacanciesIndexRoute
  '/dashboard/users/$userId/resume': typeof DashboardUsersUserIdResumeIndexRoute
  '/dashboard/users/vacancies/$vacancyId': typeof DashboardUsersVacanciesVacancyIdIndexRoute
  '/dashboard/organizations/$organizationId/vacancies/$vacancyId': typeof DashboardOrganizationsOrganizationIdVacanciesVacancyIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_landing': typeof LandingRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/users': typeof DashboardUsersRouteRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-out': typeof AuthSignOutRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/_landing/': typeof LandingIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/admin/organizations': typeof DashboardAdminOrganizationsRouteRouteWithChildren
  '/dashboard/admin/skills': typeof DashboardAdminSkillsRouteRouteWithChildren
  '/dashboard/admin/users': typeof DashboardAdminUsersRouteRouteWithChildren
  '/dashboard/admin/vacancies': typeof DashboardAdminVacanciesRouteRouteWithChildren
  '/dashboard/organizations/$organizationId': typeof DashboardOrganizationsOrganizationIdRouteRouteWithChildren
  '/dashboard/users/': typeof DashboardUsersIndexRoute
  '/organizations/create/': typeof OrganizationsCreateIndexRoute
  '/dashboard/organizations/$organizationId/employees': typeof DashboardOrganizationsOrganizationIdEmployeesRouteRouteWithChildren
  '/dashboard/organizations/$organizationId/vacancies': typeof DashboardOrganizationsOrganizationIdVacanciesRouteRouteWithChildren
  '/dashboard/users/$userId/resume': typeof DashboardUsersUserIdResumeRouteRouteWithChildren
  '/dashboard/admin/organizations/': typeof DashboardAdminOrganizationsIndexRoute
  '/dashboard/admin/skills/': typeof DashboardAdminSkillsIndexRoute
  '/dashboard/admin/specialties/': typeof DashboardAdminSpecialtiesIndexRoute
  '/dashboard/admin/users/': typeof DashboardAdminUsersIndexRoute
  '/dashboard/admin/vacancies/': typeof DashboardAdminVacanciesIndexRoute
  '/dashboard/organizations/$organizationId/': typeof DashboardOrganizationsOrganizationIdIndexRoute
  '/dashboard/users/requests/': typeof DashboardUsersRequestsIndexRoute
  '/dashboard/users/vacancies/': typeof DashboardUsersVacanciesIndexRoute
  '/dashboard/organizations/$organizationId/employees/': typeof DashboardOrganizationsOrganizationIdEmployeesIndexRoute
  '/dashboard/organizations/$organizationId/vacancies/': typeof DashboardOrganizationsOrganizationIdVacanciesIndexRoute
  '/dashboard/users/$userId/resume/': typeof DashboardUsersUserIdResumeIndexRoute
  '/dashboard/users/vacancies/$vacancyId/': typeof DashboardUsersVacanciesVacancyIdIndexRoute
  '/dashboard/organizations/$organizationId/vacancies/$vacancyId/': typeof DashboardOrganizationsOrganizationIdVacanciesVacancyIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/dashboard'
    | '/dashboard/users'
    | '/auth/sign-in'
    | '/auth/sign-out'
    | '/auth/sign-up'
    | '/'
    | '/dashboard/'
    | '/dashboard/admin/organizations'
    | '/dashboard/admin/skills'
    | '/dashboard/admin/users'
    | '/dashboard/admin/vacancies'
    | '/dashboard/organizations/$organizationId'
    | '/dashboard/users/'
    | '/organizations/create'
    | '/dashboard/organizations/$organizationId/employees'
    | '/dashboard/organizations/$organizationId/vacancies'
    | '/dashboard/users/$userId/resume'
    | '/dashboard/admin/organizations/'
    | '/dashboard/admin/skills/'
    | '/dashboard/admin/specialties'
    | '/dashboard/admin/users/'
    | '/dashboard/admin/vacancies/'
    | '/dashboard/organizations/$organizationId/'
    | '/dashboard/users/requests'
    | '/dashboard/users/vacancies'
    | '/dashboard/organizations/$organizationId/employees/'
    | '/dashboard/organizations/$organizationId/vacancies/'
    | '/dashboard/users/$userId/resume/'
    | '/dashboard/users/vacancies/$vacancyId'
    | '/dashboard/organizations/$organizationId/vacancies/$vacancyId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth/sign-in'
    | '/auth/sign-out'
    | '/auth/sign-up'
    | '/'
    | '/dashboard'
    | '/dashboard/users'
    | '/organizations/create'
    | '/dashboard/admin/organizations'
    | '/dashboard/admin/skills'
    | '/dashboard/admin/specialties'
    | '/dashboard/admin/users'
    | '/dashboard/admin/vacancies'
    | '/dashboard/organizations/$organizationId'
    | '/dashboard/users/requests'
    | '/dashboard/users/vacancies'
    | '/dashboard/organizations/$organizationId/employees'
    | '/dashboard/organizations/$organizationId/vacancies'
    | '/dashboard/users/$userId/resume'
    | '/dashboard/users/vacancies/$vacancyId'
    | '/dashboard/organizations/$organizationId/vacancies/$vacancyId'
  id:
    | '__root__'
    | '/_landing'
    | '/dashboard'
    | '/dashboard/users'
    | '/auth/sign-in'
    | '/auth/sign-out'
    | '/auth/sign-up'
    | '/_landing/'
    | '/dashboard/'
    | '/dashboard/admin/organizations'
    | '/dashboard/admin/skills'
    | '/dashboard/admin/users'
    | '/dashboard/admin/vacancies'
    | '/dashboard/organizations/$organizationId'
    | '/dashboard/users/'
    | '/organizations/create/'
    | '/dashboard/organizations/$organizationId/employees'
    | '/dashboard/organizations/$organizationId/vacancies'
    | '/dashboard/users/$userId/resume'
    | '/dashboard/admin/organizations/'
    | '/dashboard/admin/skills/'
    | '/dashboard/admin/specialties/'
    | '/dashboard/admin/users/'
    | '/dashboard/admin/vacancies/'
    | '/dashboard/organizations/$organizationId/'
    | '/dashboard/users/requests/'
    | '/dashboard/users/vacancies/'
    | '/dashboard/organizations/$organizationId/employees/'
    | '/dashboard/organizations/$organizationId/vacancies/'
    | '/dashboard/users/$userId/resume/'
    | '/dashboard/users/vacancies/$vacancyId/'
    | '/dashboard/organizations/$organizationId/vacancies/$vacancyId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LandingRouteRoute: typeof LandingRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignOutRoute: typeof AuthSignOutRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  OrganizationsCreateIndexRoute: typeof OrganizationsCreateIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_landing': {
      id: '/_landing'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LandingRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_landing/': {
      id: '/_landing/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LandingIndexRouteImport
      parentRoute: typeof LandingRouteRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-out': {
      id: '/auth/sign-out'
      path: '/auth/sign-out'
      fullPath: '/auth/sign-out'
      preLoaderRoute: typeof AuthSignOutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/users': {
      id: '/dashboard/users'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof DashboardUsersRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/organizations/create/': {
      id: '/organizations/create/'
      path: '/organizations/create'
      fullPath: '/organizations/create'
      preLoaderRoute: typeof OrganizationsCreateIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/users/': {
      id: '/dashboard/users/'
      path: '/'
      fullPath: '/dashboard/users/'
      preLoaderRoute: typeof DashboardUsersIndexRouteImport
      parentRoute: typeof DashboardUsersRouteRoute
    }
    '/dashboard/organizations/$organizationId': {
      id: '/dashboard/organizations/$organizationId'
      path: '/organizations/$organizationId'
      fullPath: '/dashboard/organizations/$organizationId'
      preLoaderRoute: typeof DashboardOrganizationsOrganizationIdRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/admin/vacancies': {
      id: '/dashboard/admin/vacancies'
      path: '/admin/vacancies'
      fullPath: '/dashboard/admin/vacancies'
      preLoaderRoute: typeof DashboardAdminVacanciesRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/admin/users': {
      id: '/dashboard/admin/users'
      path: '/admin/users'
      fullPath: '/dashboard/admin/users'
      preLoaderRoute: typeof DashboardAdminUsersRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/admin/skills': {
      id: '/dashboard/admin/skills'
      path: '/admin/skills'
      fullPath: '/dashboard/admin/skills'
      preLoaderRoute: typeof DashboardAdminSkillsRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/admin/organizations': {
      id: '/dashboard/admin/organizations'
      path: '/admin/organizations'
      fullPath: '/dashboard/admin/organizations'
      preLoaderRoute: typeof DashboardAdminOrganizationsRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/users/vacancies/': {
      id: '/dashboard/users/vacancies/'
      path: '/vacancies'
      fullPath: '/dashboard/users/vacancies'
      preLoaderRoute: typeof DashboardUsersVacanciesIndexRouteImport
      parentRoute: typeof DashboardUsersRouteRoute
    }
    '/dashboard/users/requests/': {
      id: '/dashboard/users/requests/'
      path: '/requests'
      fullPath: '/dashboard/users/requests'
      preLoaderRoute: typeof DashboardUsersRequestsIndexRouteImport
      parentRoute: typeof DashboardUsersRouteRoute
    }
    '/dashboard/organizations/$organizationId/': {
      id: '/dashboard/organizations/$organizationId/'
      path: '/'
      fullPath: '/dashboard/organizations/$organizationId/'
      preLoaderRoute: typeof DashboardOrganizationsOrganizationIdIndexRouteImport
      parentRoute: typeof DashboardOrganizationsOrganizationIdRouteRoute
    }
    '/dashboard/admin/vacancies/': {
      id: '/dashboard/admin/vacancies/'
      path: '/'
      fullPath: '/dashboard/admin/vacancies/'
      preLoaderRoute: typeof DashboardAdminVacanciesIndexRouteImport
      parentRoute: typeof DashboardAdminVacanciesRouteRoute
    }
    '/dashboard/admin/users/': {
      id: '/dashboard/admin/users/'
      path: '/'
      fullPath: '/dashboard/admin/users/'
      preLoaderRoute: typeof DashboardAdminUsersIndexRouteImport
      parentRoute: typeof DashboardAdminUsersRouteRoute
    }
    '/dashboard/admin/specialties/': {
      id: '/dashboard/admin/specialties/'
      path: '/admin/specialties'
      fullPath: '/dashboard/admin/specialties'
      preLoaderRoute: typeof DashboardAdminSpecialtiesIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/admin/skills/': {
      id: '/dashboard/admin/skills/'
      path: '/'
      fullPath: '/dashboard/admin/skills/'
      preLoaderRoute: typeof DashboardAdminSkillsIndexRouteImport
      parentRoute: typeof DashboardAdminSkillsRouteRoute
    }
    '/dashboard/admin/organizations/': {
      id: '/dashboard/admin/organizations/'
      path: '/'
      fullPath: '/dashboard/admin/organizations/'
      preLoaderRoute: typeof DashboardAdminOrganizationsIndexRouteImport
      parentRoute: typeof DashboardAdminOrganizationsRouteRoute
    }
    '/dashboard/users/$userId/resume': {
      id: '/dashboard/users/$userId/resume'
      path: '/$userId/resume'
      fullPath: '/dashboard/users/$userId/resume'
      preLoaderRoute: typeof DashboardUsersUserIdResumeRouteRouteImport
      parentRoute: typeof DashboardUsersRouteRoute
    }
    '/dashboard/organizations/$organizationId/vacancies': {
      id: '/dashboard/organizations/$organizationId/vacancies'
      path: '/vacancies'
      fullPath: '/dashboard/organizations/$organizationId/vacancies'
      preLoaderRoute: typeof DashboardOrganizationsOrganizationIdVacanciesRouteRouteImport
      parentRoute: typeof DashboardOrganizationsOrganizationIdRouteRoute
    }
    '/dashboard/organizations/$organizationId/employees': {
      id: '/dashboard/organizations/$organizationId/employees'
      path: '/employees'
      fullPath: '/dashboard/organizations/$organizationId/employees'
      preLoaderRoute: typeof DashboardOrganizationsOrganizationIdEmployeesRouteRouteImport
      parentRoute: typeof DashboardOrganizationsOrganizationIdRouteRoute
    }
    '/dashboard/users/vacancies/$vacancyId/': {
      id: '/dashboard/users/vacancies/$vacancyId/'
      path: '/vacancies/$vacancyId'
      fullPath: '/dashboard/users/vacancies/$vacancyId'
      preLoaderRoute: typeof DashboardUsersVacanciesVacancyIdIndexRouteImport
      parentRoute: typeof DashboardUsersRouteRoute
    }
    '/dashboard/users/$userId/resume/': {
      id: '/dashboard/users/$userId/resume/'
      path: '/'
      fullPath: '/dashboard/users/$userId/resume/'
      preLoaderRoute: typeof DashboardUsersUserIdResumeIndexRouteImport
      parentRoute: typeof DashboardUsersUserIdResumeRouteRoute
    }
    '/dashboard/organizations/$organizationId/vacancies/': {
      id: '/dashboard/organizations/$organizationId/vacancies/'
      path: '/'
      fullPath: '/dashboard/organizations/$organizationId/vacancies/'
      preLoaderRoute: typeof DashboardOrganizationsOrganizationIdVacanciesIndexRouteImport
      parentRoute: typeof DashboardOrganizationsOrganizationIdVacanciesRouteRoute
    }
    '/dashboard/organizations/$organizationId/employees/': {
      id: '/dashboard/organizations/$organizationId/employees/'
      path: '/'
      fullPath: '/dashboard/organizations/$organizationId/employees/'
      preLoaderRoute: typeof DashboardOrganizationsOrganizationIdEmployeesIndexRouteImport
      parentRoute: typeof DashboardOrganizationsOrganizationIdEmployeesRouteRoute
    }
    '/dashboard/organizations/$organizationId/vacancies/$vacancyId/': {
      id: '/dashboard/organizations/$organizationId/vacancies/$vacancyId/'
      path: '/$vacancyId'
      fullPath: '/dashboard/organizations/$organizationId/vacancies/$vacancyId'
      preLoaderRoute: typeof DashboardOrganizationsOrganizationIdVacanciesVacancyIdIndexRouteImport
      parentRoute: typeof DashboardOrganizationsOrganizationIdVacanciesRouteRoute
    }
  }
}

interface LandingRouteRouteChildren {
  LandingIndexRoute: typeof LandingIndexRoute
}

const LandingRouteRouteChildren: LandingRouteRouteChildren = {
  LandingIndexRoute: LandingIndexRoute,
}

const LandingRouteRouteWithChildren = LandingRouteRoute._addFileChildren(
  LandingRouteRouteChildren,
)

interface DashboardUsersUserIdResumeRouteRouteChildren {
  DashboardUsersUserIdResumeIndexRoute: typeof DashboardUsersUserIdResumeIndexRoute
}

const DashboardUsersUserIdResumeRouteRouteChildren: DashboardUsersUserIdResumeRouteRouteChildren =
  {
    DashboardUsersUserIdResumeIndexRoute: DashboardUsersUserIdResumeIndexRoute,
  }

const DashboardUsersUserIdResumeRouteRouteWithChildren =
  DashboardUsersUserIdResumeRouteRoute._addFileChildren(
    DashboardUsersUserIdResumeRouteRouteChildren,
  )

interface DashboardUsersRouteRouteChildren {
  DashboardUsersIndexRoute: typeof DashboardUsersIndexRoute
  DashboardUsersUserIdResumeRouteRoute: typeof DashboardUsersUserIdResumeRouteRouteWithChildren
  DashboardUsersRequestsIndexRoute: typeof DashboardUsersRequestsIndexRoute
  DashboardUsersVacanciesIndexRoute: typeof DashboardUsersVacanciesIndexRoute
  DashboardUsersVacanciesVacancyIdIndexRoute: typeof DashboardUsersVacanciesVacancyIdIndexRoute
}

const DashboardUsersRouteRouteChildren: DashboardUsersRouteRouteChildren = {
  DashboardUsersIndexRoute: DashboardUsersIndexRoute,
  DashboardUsersUserIdResumeRouteRoute:
    DashboardUsersUserIdResumeRouteRouteWithChildren,
  DashboardUsersRequestsIndexRoute: DashboardUsersRequestsIndexRoute,
  DashboardUsersVacanciesIndexRoute: DashboardUsersVacanciesIndexRoute,
  DashboardUsersVacanciesVacancyIdIndexRoute:
    DashboardUsersVacanciesVacancyIdIndexRoute,
}

const DashboardUsersRouteRouteWithChildren =
  DashboardUsersRouteRoute._addFileChildren(DashboardUsersRouteRouteChildren)

interface DashboardAdminOrganizationsRouteRouteChildren {
  DashboardAdminOrganizationsIndexRoute: typeof DashboardAdminOrganizationsIndexRoute
}

const DashboardAdminOrganizationsRouteRouteChildren: DashboardAdminOrganizationsRouteRouteChildren =
  {
    DashboardAdminOrganizationsIndexRoute:
      DashboardAdminOrganizationsIndexRoute,
  }

const DashboardAdminOrganizationsRouteRouteWithChildren =
  DashboardAdminOrganizationsRouteRoute._addFileChildren(
    DashboardAdminOrganizationsRouteRouteChildren,
  )

interface DashboardAdminSkillsRouteRouteChildren {
  DashboardAdminSkillsIndexRoute: typeof DashboardAdminSkillsIndexRoute
}

const DashboardAdminSkillsRouteRouteChildren: DashboardAdminSkillsRouteRouteChildren =
  {
    DashboardAdminSkillsIndexRoute: DashboardAdminSkillsIndexRoute,
  }

const DashboardAdminSkillsRouteRouteWithChildren =
  DashboardAdminSkillsRouteRoute._addFileChildren(
    DashboardAdminSkillsRouteRouteChildren,
  )

interface DashboardAdminUsersRouteRouteChildren {
  DashboardAdminUsersIndexRoute: typeof DashboardAdminUsersIndexRoute
}

const DashboardAdminUsersRouteRouteChildren: DashboardAdminUsersRouteRouteChildren =
  {
    DashboardAdminUsersIndexRoute: DashboardAdminUsersIndexRoute,
  }

const DashboardAdminUsersRouteRouteWithChildren =
  DashboardAdminUsersRouteRoute._addFileChildren(
    DashboardAdminUsersRouteRouteChildren,
  )

interface DashboardAdminVacanciesRouteRouteChildren {
  DashboardAdminVacanciesIndexRoute: typeof DashboardAdminVacanciesIndexRoute
}

const DashboardAdminVacanciesRouteRouteChildren: DashboardAdminVacanciesRouteRouteChildren =
  {
    DashboardAdminVacanciesIndexRoute: DashboardAdminVacanciesIndexRoute,
  }

const DashboardAdminVacanciesRouteRouteWithChildren =
  DashboardAdminVacanciesRouteRoute._addFileChildren(
    DashboardAdminVacanciesRouteRouteChildren,
  )

interface DashboardOrganizationsOrganizationIdEmployeesRouteRouteChildren {
  DashboardOrganizationsOrganizationIdEmployeesIndexRoute: typeof DashboardOrganizationsOrganizationIdEmployeesIndexRoute
}

const DashboardOrganizationsOrganizationIdEmployeesRouteRouteChildren: DashboardOrganizationsOrganizationIdEmployeesRouteRouteChildren =
  {
    DashboardOrganizationsOrganizationIdEmployeesIndexRoute:
      DashboardOrganizationsOrganizationIdEmployeesIndexRoute,
  }

const DashboardOrganizationsOrganizationIdEmployeesRouteRouteWithChildren =
  DashboardOrganizationsOrganizationIdEmployeesRouteRoute._addFileChildren(
    DashboardOrganizationsOrganizationIdEmployeesRouteRouteChildren,
  )

interface DashboardOrganizationsOrganizationIdVacanciesRouteRouteChildren {
  DashboardOrganizationsOrganizationIdVacanciesIndexRoute: typeof DashboardOrganizationsOrganizationIdVacanciesIndexRoute
  DashboardOrganizationsOrganizationIdVacanciesVacancyIdIndexRoute: typeof DashboardOrganizationsOrganizationIdVacanciesVacancyIdIndexRoute
}

const DashboardOrganizationsOrganizationIdVacanciesRouteRouteChildren: DashboardOrganizationsOrganizationIdVacanciesRouteRouteChildren =
  {
    DashboardOrganizationsOrganizationIdVacanciesIndexRoute:
      DashboardOrganizationsOrganizationIdVacanciesIndexRoute,
    DashboardOrganizationsOrganizationIdVacanciesVacancyIdIndexRoute:
      DashboardOrganizationsOrganizationIdVacanciesVacancyIdIndexRoute,
  }

const DashboardOrganizationsOrganizationIdVacanciesRouteRouteWithChildren =
  DashboardOrganizationsOrganizationIdVacanciesRouteRoute._addFileChildren(
    DashboardOrganizationsOrganizationIdVacanciesRouteRouteChildren,
  )

interface DashboardOrganizationsOrganizationIdRouteRouteChildren {
  DashboardOrganizationsOrganizationIdEmployeesRouteRoute: typeof DashboardOrganizationsOrganizationIdEmployeesRouteRouteWithChildren
  DashboardOrganizationsOrganizationIdVacanciesRouteRoute: typeof DashboardOrganizationsOrganizationIdVacanciesRouteRouteWithChildren
  DashboardOrganizationsOrganizationIdIndexRoute: typeof DashboardOrganizationsOrganizationIdIndexRoute
}

const DashboardOrganizationsOrganizationIdRouteRouteChildren: DashboardOrganizationsOrganizationIdRouteRouteChildren =
  {
    DashboardOrganizationsOrganizationIdEmployeesRouteRoute:
      DashboardOrganizationsOrganizationIdEmployeesRouteRouteWithChildren,
    DashboardOrganizationsOrganizationIdVacanciesRouteRoute:
      DashboardOrganizationsOrganizationIdVacanciesRouteRouteWithChildren,
    DashboardOrganizationsOrganizationIdIndexRoute:
      DashboardOrganizationsOrganizationIdIndexRoute,
  }

const DashboardOrganizationsOrganizationIdRouteRouteWithChildren =
  DashboardOrganizationsOrganizationIdRouteRoute._addFileChildren(
    DashboardOrganizationsOrganizationIdRouteRouteChildren,
  )

interface DashboardRouteRouteChildren {
  DashboardUsersRouteRoute: typeof DashboardUsersRouteRouteWithChildren
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardAdminOrganizationsRouteRoute: typeof DashboardAdminOrganizationsRouteRouteWithChildren
  DashboardAdminSkillsRouteRoute: typeof DashboardAdminSkillsRouteRouteWithChildren
  DashboardAdminUsersRouteRoute: typeof DashboardAdminUsersRouteRouteWithChildren
  DashboardAdminVacanciesRouteRoute: typeof DashboardAdminVacanciesRouteRouteWithChildren
  DashboardOrganizationsOrganizationIdRouteRoute: typeof DashboardOrganizationsOrganizationIdRouteRouteWithChildren
  DashboardAdminSpecialtiesIndexRoute: typeof DashboardAdminSpecialtiesIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardUsersRouteRoute: DashboardUsersRouteRouteWithChildren,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardAdminOrganizationsRouteRoute:
    DashboardAdminOrganizationsRouteRouteWithChildren,
  DashboardAdminSkillsRouteRoute: DashboardAdminSkillsRouteRouteWithChildren,
  DashboardAdminUsersRouteRoute: DashboardAdminUsersRouteRouteWithChildren,
  DashboardAdminVacanciesRouteRoute:
    DashboardAdminVacanciesRouteRouteWithChildren,
  DashboardOrganizationsOrganizationIdRouteRoute:
    DashboardOrganizationsOrganizationIdRouteRouteWithChildren,
  DashboardAdminSpecialtiesIndexRoute: DashboardAdminSpecialtiesIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  LandingRouteRoute: LandingRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignOutRoute: AuthSignOutRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  OrganizationsCreateIndexRoute: OrganizationsCreateIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

import type { getRouter } from './router.tsx'
import type { createStart } from '@tanstack/react-start'
declare module '@tanstack/react-start' {
  interface Register {
    ssr: true
    router: Awaited<ReturnType<typeof getRouter>>
  }
}
