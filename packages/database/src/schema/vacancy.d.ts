import * as pg from "drizzle-orm/pg-core";
export declare const workFormatTypes: pg.PgEnum<["REMOTE", "OFFICE", "HYBRID"]>;
export declare const vacancyTypes: pg.PgEnum<["JOB", "INTERNSHIP"]>;
export declare const vacancies: pg.PgTableWithColumns<{
    name: "vacancies";
    schema: undefined;
    columns: {
        name: pg.PgColumn<{
            name: "name";
            tableName: "vacancies";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        responsibilities: pg.PgColumn<{
            name: "responsibilities";
            tableName: "vacancies";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        requirements: pg.PgColumn<{
            name: "requirements";
            tableName: "vacancies";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        conditions: pg.PgColumn<{
            name: "conditions";
            tableName: "vacancies";
            dataType: "string";
            columnType: "PgText";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        specialtyId: pg.PgColumn<{
            name: "specialtyId";
            tableName: "vacancies";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        skillIds: pg.PgColumn<{
            name: "skillIds";
            tableName: "vacancies";
            dataType: "array";
            columnType: "PgArray";
            data: string[];
            driverParam: string | string[];
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: import("drizzle-orm").Column<{
                name: "";
                tableName: "vacancies";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                isPrimaryKey: false;
                isAutoincrement: false;
                hasRuntimeDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
                identity: undefined;
                generated: undefined;
            }, {}, {
                length: 255;
            }>;
            identity: undefined;
            generated: undefined;
        }, {}, {
            baseBuilder: pg.PgColumnBuilder<{
                name: "";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                enumValues: [string, ...string[]];
                length: 255;
            }, {}, {
                length: 255;
            }, import("drizzle-orm").ColumnBuilderExtraConfig>;
            size: undefined;
        }>;
        organizationId: pg.PgColumn<{
            name: "company_id";
            tableName: "vacancies";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        address: pg.PgColumn<{
            name: "address";
            tableName: "vacancies";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        workFormat: pg.PgColumn<{
            name: "workFormat";
            tableName: "vacancies";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "REMOTE" | "OFFICE" | "HYBRID";
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["REMOTE", "OFFICE", "HYBRID"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        type: pg.PgColumn<{
            name: "type";
            tableName: "vacancies";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "JOB" | "INTERNSHIP";
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["JOB", "INTERNSHIP"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        salaryFrom: pg.PgColumn<{
            name: "salary_from";
            tableName: "vacancies";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        salaryTo: pg.PgColumn<{
            name: "salary_to";
            tableName: "vacancies";
            dataType: "number";
            columnType: "PgInteger";
            data: number;
            driverParam: string | number;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        expiresAt: pg.PgColumn<{
            name: "expires_at";
            tableName: "vacancies";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        status: pg.PgColumn<{
            name: "status";
            tableName: "vacancies";
            dataType: "string";
            columnType: "PgEnumColumn";
            data: "PENDING" | "APPROVED" | "REJECTED" | "COMPLETED";
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: ["PENDING", "APPROVED", "REJECTED", "COMPLETED"];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        id: pg.PgColumn<{
            name: "id";
            tableName: "vacancies";
            dataType: "string";
            columnType: "PgVarchar";
            data: string;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: true;
            isAutoincrement: false;
            hasRuntimeDefault: true;
            enumValues: [string, ...string[]];
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {
            length: 255;
        }>;
        serial: pg.PgColumn<{
            name: "serial";
            tableName: "vacancies";
            dataType: "number";
            columnType: "PgSerial";
            data: number;
            driverParam: number;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        createdAt: pg.PgColumn<{
            name: "created_at";
            tableName: "vacancies";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: true;
            hasDefault: true;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
        deletedAt: pg.PgColumn<{
            name: "deleted_at";
            tableName: "vacancies";
            dataType: "date";
            columnType: "PgTimestamp";
            data: Date;
            driverParam: string;
            notNull: false;
            hasDefault: false;
            isPrimaryKey: false;
            isAutoincrement: false;
            hasRuntimeDefault: false;
            enumValues: undefined;
            baseColumn: never;
            identity: undefined;
            generated: undefined;
        }, {}, {}>;
    };
    dialect: "pg";
}>;
export declare const vacanciesRelations: import("drizzle-orm").Relations<"vacancies", {
    organization: import("drizzle-orm").One<"organizations", true>;
    specialty: import("drizzle-orm").One<"specialties", true>;
    requests: import("drizzle-orm").Many<"requests">;
}>;
